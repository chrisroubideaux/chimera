// orders page
import { useState, useEffect } from 'react';
import axios from 'axios';
import Head from 'next/head';
import Navbar from '@/components/Nav/Navbar';
import Tab from '@/components/orders/Tab';
import Sidebar from '@/components/admin/Sidebar';
// order imports

import InStore from '@/components/orders/InStore';
import Online from '@/components/orders/Online';
import GiftCard from '@/components/orders/GiftCard';
import Refunds from '@/components/orders/Refunds';
// sale analytics imports
import DailyChart from '@/components/sales/DailyChart';
import WeeklyChart from '@/components/sales/WeeklyChart';
import MonthlyChart from '@/components/sales/MonthlyChart';
import HourlyChart from '@/components/sales/HourlyChart';
//import Form from '@/components/orders/Form';

export default function Orders() {
  const [activeComponent, setActiveComponent] = useState('Orders');
  const [admins, setAdmins] = useState([]);

  useEffect(() => {
    axios
      .get('https://chimera-h56c.onrender.com/admins')
      .then((response) => {
        setAdmins(response.data);
      })
      .catch((error) => {
        console.error('Error fetching admins:', error);
      });
  }, []);

  const renderComponent = () => {
    switch (activeComponent) {
      case 'InStore':
        return <InStore setActiveComponent={setActiveComponent} />;
      case 'Online':
        return <Online setActiveComponent={setActiveComponent} />;
      case 'GiftCard':
        return <GiftCard setActiveComponent={setActiveComponent} />;
      case 'Refunds':
        return <Refunds setActiveComponent={setActiveComponent} />;
      case 'WeeklyChart':
        return <WeeklyChart setActiveComponent={setActiveComponent} />;
      case 'MonthlyChart':
        return <MonthlyChart setActiveComponent={setActiveComponent} />;
      case 'DailyChart':
        return <DailyChart setActiveComponent={setActiveComponent} />;
      case 'HourlyChart':
        return <HourlyChart setActiveComponent={setActiveComponent} />;
      default:
        return <InStore setActiveComponent={setActiveComponent} />;
    }
  };
  return (
    <>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Frijole&family=Teko:wght@300&display=swap"
          rel="stylesheet"
        />
        <link
          rel="stylesheet"
          href="https://use.fontawesome.com/releases/v6.1.1/css/all.css"
        />
      </Head>
      <div className="layout h-100">
        <Navbar />
        {admins.map((admins) => (
          <Tab
            setActiveComponent={setActiveComponent}
            key={admins.id}
            admins={admins}
          />
        ))}
        <div className="container-fluid ">
          <div className="row">
            <div className="col-lg-4 col-xxl-3">
              {admins.map((admins) => (
                <Sidebar
                  setActiveComponent={setActiveComponent}
                  key={admins.id}
                  admins={admins}
                />
              ))}
            </div>
            <div className="col-lg-8 col-xxl-9">
              <div className="mt-3">{renderComponent()}</div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
